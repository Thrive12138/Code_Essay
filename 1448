/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    
    public int goodNodes(TreeNode root) {
        int ans = 0;
        int max = root.val;
        ans = look(root, max, ans);
        return ans;
    }

    public int look(TreeNode node, int max, int ans) {
        if(node.val >= max) {
            ans++;
            max = node.val;
        }
        if(node.left == null && node.right == null) {
            return ans;
        }
        if(node.left != null) {
            ans = look(node.left, max, ans);
        }
        if(node.right != null) {
            ans = look(node.right, max, ans);
        }
        return ans;
    }
}
