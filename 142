/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode detectCycle(ListNode head) {
        HashSet<ListNode> used = new HashSet<>();
        ListNode pos = head;
        while(pos != null && pos.next != null) {
            boolean ad = used.contains(pos);
            if(ad) {
                return pos;
            }else {
                used.add(pos);
                pos = pos.next;
            }
        }
        return null;
    }
}
