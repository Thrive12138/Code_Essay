class Solution {
    public void rotate(int[] nums, int k) {
        int need = k % nums.length;
        if(need == 0) {
            return;
        }
        int[] temp = new int[need];
        for(int i = 0; i < need; i++) {
            temp[i] = nums[i + nums.length - need];
        }
        for(int i = nums.length - 1; i >= need; i--) {
            nums[i] = nums[i - need];
        }
        for(int i = 0; i < need; i++) {
            nums[i] = temp[i];
        }
    }
}

class Solution {
    public void rotate(int[] nums, int k) {
        k %= nums.length;
        reverse(nums, 0, nums.length - 1);
        reverse(nums, 0, k - 1);
        reverse(nums, k, nums.length - 1);
    }
    public int[] reverse(int[] nums, int begin, int end) {
        while(end > begin) {
            int temp = nums[end];
            nums[end] = nums[begin];
            nums[begin] = temp;
            end--;
            begin++;
        }
        return nums;
    }
}
